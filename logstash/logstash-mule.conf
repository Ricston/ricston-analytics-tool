input {
  file {
    path => "/Users/balinju/ricston/apps/mule-standalone-3.5.0/logs/mule-app-wssecurity-deploy.log"
    start_position => beginning
  }
  file {
    path => "/Users/balinju/ricston/apps/mule-standalone-3.5.0/logs/mule.log"
    start_position => beginning
  }
}

filter {
  if [path] =~ "mule_ee" {
    mutate { replace => { "type" => "mule" } }
  }
  if [path] =~ "mule" {
    mutate { replace => { "type" => "mule" } }
  }
  if [path] =~ "wssecurity-deploy" {
    mutate { replace => { "type" => "wssecurity-deploy" } }
  }
  if [path] =~ "default" {
    mutate { replace => { "type" => "default" } }
  }
  if [path] =~ "interceptor" {
    mutate { replace => { "type" => "interceptor" } }
  }
  multiline {
    pattern => "^%{LOGLEVEL:level}"
    negate => true
    what => "previous"
  }
  grok {
  	patterns_dir => "./patterns"
    match => { "message" => "%{LOGLEVEL:level}%{SPACE} %{TIMESTAMP_ISO8601:timestamp} \[%{DATA:thread}\] %{DATA:class}: %{GREEDY_MULTILINE:log}" }
  }
  
  date {
    match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss,SSS" ]
  }
  
}

output {
  elasticsearch {
    host => localhost
  }
  stdout { codec => rubydebug }
}
